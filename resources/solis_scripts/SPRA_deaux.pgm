//This SOLIS pg script sets several acquisition parameters.
//The following parameters are NOT set here currently: Pixel Readout Rate, Electronic Shuttering Mode, Sensitivity/Dynamic Range, Overlap Readout, Spurious Noise Filter, Fill Display Window, image rotation, Rolling Shutter Global Clear and Static Blemish Correction.
//These should be set by loading an initialization file at startup. They can be set through a pgm script, but since do not change for the majority of acquisitions, they are not set here.
//By default this program automatically uses Internal triggering and Kinetic Series scans. Can be changed, is not done here.
cls() //clear the output window -- this window prints scriEpt outputs in SOLIS.

/***********Parameters to set****************/
useSPLASSH=1
read("C:\Mohammed\SPLASSH_Zyla_NEW\strobe_status_flag.txt",strobestatus$)
if (val(strobestatus$)==0) then
	print("Check strobe status in SPLASSH")
	//end
else
	//
endif
read("C:\Mohammed\SPLASSH_Zyla_NEW\stim_status_flag.txt",stimstatus$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",bin$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",h$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",bot$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",w$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",l$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",etwanted$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",f$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",rdur$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",spoolstem$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",spoollocation$)
read("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",ntrials$)
height=val(h$)
left=1
width=val(w$)
bin=val(bin$)
recordduration=val(rdur$) //seconds
exposuretime=val(etwanted$)
numtrials=val(ntrials$)
xflip=0
yflip=0

/*********Check any errors in setting parameters*******/
//...(1) Fix height issues.
if (height>detectory()) then
	height=detectory()
else
	//
endif
if (height<16) then
	height=16 //empirically determined.
else
	//
endif
height=height-mod(height,bin) //height has to be divisible by the bin -- set it to the smaller value automatically.
bottom=(2048/2)+1-(height/2) //vertically center.
top=height+bottom-1 //set top based on vertical center.
bottom=floor(bottom)
top=floor(top)

//...(2) Fix width issues.
if (width>detectorx()) then
	width=detectorx()
else
	//
endif
if (width<(bin*40)) then
	width=bin*40 //empirically determined.
else
	//
endif
if (useSPLASSH==0) then
	width=width-mod(width,bin)
	if ((left+width)>detectorx()) then //make sure left+width is not greater than 0
		left = detectorx()-width+1
	else
		left=left-mod(left,bin)+1
	endif
	//width=(width+left-1-mod(width+left-1,bin))
	right=width+left-1

else
	width=width-mod(width,bin) //height has to be divisible by the bin -- set it to the smaller value automatically.
	left=(2048/2)+1-(width/2) //vertically center.
	right=width+left-1
	left=floor(left)
	right=floor(right)
endif

/*****apply settings to the camera*******/
//below is a liittle hack to figure out what the minimum exposure time is when NOT using overlap mode. Setting it to 0 will set the exposure to be 1e-5 which is too small
//adds a small .00001 s when using overlap mode. can change code to account for this.
SetImage(left,right,bin,bottom,top,bin,xflip,yflip) //set image parameters
if (exposuretime<=0.0001) then
	exposuretime=0.0001
else
	//
endif
SetExposureTime(exposuretime)
SetKineticCycleTime(.00000001)
etreal=GetExposureTime()
kt=GetKineticCycleTime()
framerate=1/kt
//framerate=floor(framerate)
SetKineticCycleTime(1/framerate)
etreal=GetExposureTime()
kt=GetKineticCycleTime()
framerate=1/kt

numimages=floor(framerate*recordduration)
if ((numimages/framerate)>=recordduration) then
	numimages=floor(framerate*recordduration)
else
	numimages=floor(framerate*recordduration)+1
endif
print(numimages)
/******write true settings to file*******/
kill("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt")
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",bin)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",height)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",bottom)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt",width)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", left)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", etreal)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", framerate)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", numimages/framerate)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", spoolstem$)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", spoollocation$)
write("C:\Mohammed\SPLASSH_Zyla_NEW\zyla_settings.txt", numtrials)
close()
execute("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\udp_send_record\dist\udp_send_record.exe")
/*******write webcam params file*******/
/*******acquire runs************/
looptrials=numtrials+1
for i = 1 to looptrials step 1
if (i==1) then
	SetTriggerMode(0)
	SetKinetics(etreal,10,1/framerate)
	SetImage(left,right,bin,bottom,top,bin,xflip,yflip) //set image parameterse
	setspool(1) // Turn spooling on
	setspoolstorage(0) // Spool to disk
	setspoolstem(spoolstem$)
	setspoollocation(spoollocation$)
	if (i>1) then
		ChangeDisplay(#0,2)
	else
		//
	endif
	time1=time()
	run()
	time2=time()
	print("Just finished baseline :", i, " it took", time2-time1, " s")
else
	execute("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\udp_send_statereset\dist\udp_send_statereset.exe")
	kill("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt")
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",640)
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",480)
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",30*numimages/framerate)
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",spoollocation$)
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",spoolstem$)
	write("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\webcamparams.txt",i-1)
	close()
	if (val(stimstatus$)==0) then
		SetTriggerMode(0)
	else
		SetTriggerMode(6)
	endif
	SetKinetics(etreal,numimages,1/framerate)
	SetImage(left,right,bin,bottom,top,bin,xflip,yflip) //set image parameters
	setspool(1) // Turn spooling on
	setspoolstorage(0) // Spool to disk
	setspoolstem(spoolstem$)
	print(spoolstem$)
	setspoollocation(spoollocation$)
	ChangeDisplay(#0,2)
	time1=time()	
	execute("python C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\webcam_fcns\writetovideo.py")
	run()
	time2=time()
	print("Just finished trial :", i-1, " it took", time2-time1, " s")
	delay(3000)				
endif	
next
execute("C:\Mohammed\SPLASSH_Zyla_NEW\python_scripts\udp_send_infofile\dist\udp_send_infofile.exe")